---
interface Props {
  infos: string[];
}

const { infos } = Astro.props;
---

<ul class="info-list">
  {
    infos.map((info) => (
      <li>
        <svg
          class="info-list__decoration"
          width="18"
          height="20"
          viewBox="0 0 18 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M7.39961 11.5H10.5996L11.3996 19.3H6.59961L7.39961 11.5Z"
            fill="#2D2D2D"
          />
          <path
            d="M10.6004 7.90039L7.4004 7.90039L6.60041 0.700415L11.4004 0.700416L10.6004 7.90039Z"
            fill="#2D2D2D"
          />
          <path
            d="M6.68932 9.58452L8.14973 12.114L2.19108 16.3974L0.000462508 12.6032L6.68932 9.58452Z"
            fill="#2D2D2D"
          />
          <path
            d="M11.3107 10.2885L9.85027 7.75902L15.8089 3.47562L17.9995 7.26988L11.3107 10.2885Z"
            fill="#2D2D2D"
          />
          <path
            d="M8.14955 7.75933L6.68914 10.2888L0.0002791 7.27018L2.19089 3.47593L8.14955 7.75933Z"
            fill="#2D2D2D"
          />
          <path
            d="M9.85045 12.1137L11.3109 9.58422L17.9997 12.6029L15.8091 16.3971L9.85045 12.1137Z"
            fill="#2D2D2D"
          />
          <circle cx="8.69999" cy="9.9998" r="2.69999" fill="#2D2D2D" />
        </svg>
        <span set:html={info} class="info-list__text" />
      </li>
    ))
  }
</ul>
<style>
  .info-list li {
    margin-top: 1rem 0;
    padding: 2rem 0;
    border-bottom: 1px solid var(--gray-dark);
    font-size: 1.2rem;
    display: flex;
    gap: 3rem;

    @media screen and (min-width: 720px) {
      font-size: 1.5rem;
      gap: 6rem;
    }
  }
  .info-list li:last-child {
    border-bottom: none;
  }
  .info-list__decoration {
    height: 3rem;
    min-width: 3rem;
    animation: spin 8s linear infinite;

    @media screen and (min-width: 720px) {
      margin: auto;
    }
  }
  .info-list svg * {
    fill: var(--green);
  }

  .info-list__text {
    width: 100%;
  }
</style>
